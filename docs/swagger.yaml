basePath: /api
definitions:
  controllers.AddRelationshipDTO:
    properties:
      relativeId:
        type: integer
    required:
    - relativeId
    type: object
  controllers.LoginDTO:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  controllers.LoginSuccessMessage:
    properties:
      token:
        type: string
    type: object
  controllers.RegisterDTO:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  controllers.RegisterSuccessMessage:
    properties:
      message:
        default: registration success
        type: string
    type: object
  models.FamilyMember:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      id:
        type: integer
      relative:
        $ref: '#/definitions/models.User'
      relativeId:
        type: integer
      updatedAt:
        type: string
      userId:
        type: integer
    type: object
  models.FamilyMemberResponse:
    properties:
      id:
        type: integer
      relative_id:
        type: string
      username:
        type: string
    type: object
  models.Image:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      id:
        type: integer
      imageUrl:
        type: string
      updatedAt:
        type: string
      userId:
        type: integer
    type: object
  models.User:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      id:
        type: integer
      password:
        type: string
      updatedAt:
        type: string
      username:
        type: string
    type: object
host: 54.238.205.73
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Inheritence Management
  version: "1.0"
paths:
  /api/auth/login:
    post:
      consumes:
      - application/json
      description: login user
      parameters:
      - description: User Info
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.LoginSuccessMessage'
      summary: login
      tags:
      - auth
  /api/auth/register:
    post:
      consumes:
      - application/json
      description: register new user
      parameters:
      - description: User Info
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.RegisterDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.RegisterSuccessMessage'
      summary: register user
      tags:
      - auth
  /api/family:
    get:
      description: get family member
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.FamilyMemberResponse'
            type: array
      security:
      - Bearer: []
      summary: family member
      tags:
      - family
    post:
      consumes:
      - application/json
      description: add family member
      parameters:
      - description: Family member Info
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.AddRelationshipDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.FamilyMember'
      security:
      - Bearer: []
      summary: family member
      tags:
      - family
  /api/image:
    get:
      description: get upload image of user and family member
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Image'
            type: array
      security:
      - Bearer: []
      summary: image
      tags:
      - image
    post:
      description: upload image
      parameters:
      - description: file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Image'
      security:
      - Bearer: []
      summary: image
      tags:
      - image
  /api/profile:
    get:
      description: get user profile
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      security:
      - Bearer: []
      summary: profile
      tags:
      - profile
  /api/user:
    get:
      description: get all users by search term
      parameters:
      - description: Search Term
        in: query
        name: term
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
      security:
      - Bearer: []
      summary: users
      tags:
      - users
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
